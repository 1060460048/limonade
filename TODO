# TODO #

- add a render_partial function (shortcut for render, without the layout param...)
- designing default limonade views
- methods flash
- shortcut methods for session
- simple form helper with XSS/CSRF protection
- adding a debug() helper

- remove examples/ and move it in an external depot
- adding url_rewrite features
- more examples
- complete tests

- public API documentation:
    - tests: tag private functions
    - tests: describe in docblock header abstract definitions
    - add links in header/welcome page(blank.tpl): project web site (clic on logo?), README, github



## Later ##

- create capture helpers `content_for($name) ... end_content_for()`. That will help sending content from views to layout
- add routing support for dispatching to class methods: `dispatch('/hello/:name', 'Hello::who');`
- add routing support for dispatching to lambdas (requires PHP 5.3.0):

â€“

    dispatch('/hello/:name', function(){ 
        // process data here 
    });

- http caching
- file caching
- x-sender headers for serving static files directly thru Apache and Lighttpd


## Think about it ##

- adding an options array to dispatch functions. Perhaps for supporting user agent detection, language detection or something like that ?
- make post, put and delete params accessible with the params() function
    (take care of possible conflict with a route param: by default override get params, but raise an error notice). Really useful ?
