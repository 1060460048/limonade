# TODO #

- in README, add a section about hooks and user defined functions 
- removing php shortags in example to enhance compatibility
- add a flash_keep() function like in rails (http://guides.rubyonrails.org/action_controller_overview.html#the-flash)
- Add instructions about running tests
- in route() functions, replace "function" name with "callback" name (example: in route_build() returned array). Enhanced use of callback pseudo-type instead of functions names.
- adding abstracts (for handling enhanced callback controllers)
    - route_callback_[controller_]exists()
    - route_callback_[controller_]create()
    - route_callback_[controller_]call()
- in README, make a chapter about "callback controllers" after routes.
- in README, replace "controller functions" mentions with "callback controller"
- testing calling lambdas from dispatch functions, with native php callback (see <http://limonade.tumblr.com/post/247098505/hidden-features>).
- Adding documentation about dispatch callback (see blog post <http://limonade.tumblr.com/post/247098505/hidden-features>) (remember that controller function args must be in the same order as route params!)
- explain controllers return output in README
- explain before_render() in README
- testing and documenting autorendering features
- write tests for partial()
- refactor partial()
- partial() write small doc (README) and examples
- write tests for content_for()
- refactor content_for()
- content_for() write small doc (README) and examples
- complete CHANGES file

- improve security in render_file with a safe_dir option
- adding contributors/thanks in AUTHORS
- new redirect_to (support for https)
- adding an option('display_errors'); by default ini_set('display_errors', 0) in production env, but enabled if env is dev (unless matching option is enabled)
- in debug output, formating debug_backtrace to be me readable (like debug_backtrace output but with extra informations that can be toggled)
- public API documentation:
    - tests: tag private functions
    - tests: describe in docblock header abstract definitions
    - add links in header/welcome page(blank.tpl): project web site (clic on logo?), README, github


## And always ##

- more unit and functional tests


## Later ##

- implement user agent detection option in routing


Documentation:

- reformat code comments in order to use Natural docs (http://www.naturaldocs.org/)


- http caching
- file caching
- x-sender headers for serving static files directly thru Apache and Lighttpd
- use array_walk_recursive for unregister_globals



## Think about it ##
- adding optional renderers (markdown, haml, textile, tenjin, phptal…)

    if(class_exists('Haml'))
    {
        function haml($str, $layout=null, $vars=array())
        {
            #…
        }
    }
    else
    { 
        function haml($str, $layout=null, vars=array())
        {
            trigger_error(__FUNCTION__ . '(): Haml lib is required to use haml rendering.',
                E_USER_WARNING)
        }
    }

- make post, put and delete params accessible with the params() function
    (take care of possible conflict with a route param: by default override get params, but raise an error notice). Really useful ?
- deleting deprecated ['HTTP_SERVER_VARS'], ['HTTP_GET_VARS']... (<http://www.php.net/manual/fr/reserved.variables.post.php>...)
- params function should be singular like option ?

